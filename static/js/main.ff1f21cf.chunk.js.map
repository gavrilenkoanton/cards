{"version":3,"sources":["components/common/button/Button.module.scss","components/4_Forgot/ui/Forgot.module.scss","components/1_Profile/Profile.module.scss","main/App.module.css","components/2_Login/Login.module.scss","components/3_Registration/1_ui/Registration.module.scss","components/common/input/Input.module.scss","components/NavBar/NavBar.module.scss","components/NavBar/NavBar.tsx","components/2_Login/Login.tsx","components/common/input/Input.tsx","components/common/button/Button.tsx","components/3_Registration/3_dal/RegistrationApi.ts","components/3_Registration/2_bll/registerReducer.ts","components/3_Registration/1_ui/Registration.tsx","components/4_Forgot/dal/ForgotAPI.ts","components/4_Forgot/bll/forgot-reducer.ts","components/4_Forgot/ui/Forgot.tsx","components/1_Profile/Profile.tsx","main/routes/Routes.tsx","BLL/login-reducer.ts","BLL/redux-store.ts","main/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NavBar","props","className","styles","navBar","navBar__upperBlock","onClick","menuClickHandle","showNavBar","to","link","navBarExtension","navBarExtensionHide","navBarExtension__upperBlock","Login","wrapper","Input","type","placeholder","input","onChange","value","Button","button","color","red","blue","description","RegisterAPI","email","password","axios","post","initialState","success","error","setErrorAC","Registration","useState","setEmail","setPassword","confirmPassword","setConfirmPassword","setEmailCallback","useCallback","e","target","setPasswordCallback","setConfirmPasswordCallback","dispatch","useDispatch","registerCallback","confirmedPassword","a","err","response","data","registerThunk","useSelector","store","register","instance","create","baseURL","forgotAPI","html1","html2","emailSended","forgotPassTH","console","log","Forgot","handleClickSendButton","forgot","useEffect","alert","singIn","Profile","introduction","pages","id","title","path","component","exact","Routes","map","p","key","render","text","reducers","combineReducers","login","state","action","createStore","applyMiddleware","thunkMiddleware","App","setState","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ff1f21cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__aD3e1\",\"red\":\"Button_red__23PuC\",\"blue\":\"Button_blue__26HuO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Forgot_wrapper__p4CpK\",\"singIn\":\"Forgot_singIn__2QqXC\",\"input\":\"Forgot_input__1kc8l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__34_Q4\",\"introduction\":\"Profile_introduction__3znfv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16cJx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__2teXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Registration_wrapper__FBY9v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2FfA1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"NavBar_navLink__3jCbp\",\"navBar\":\"NavBar_navBar__169o_\",\"navBar__upperBlock\":\"NavBar_navBar__upperBlock__qc2oW\",\"link\":\"NavBar_link__3U1xr\",\"navBarExtension\":\"NavBar_navBarExtension__YcT2y\",\"navBarExtensionHide\":\"NavBar_navBarExtensionHide__2vlmv\",\"navBarExtension__upperBlock\":\"NavBar_navBarExtension__upperBlock__3s2dJ\"};","import React from 'react';\nimport styles from './NavBar.module.scss';\nimport {NavLink} from \"react-router-dom\";\n\nfunction NavBar(props: any) {\n    return (\n        <>\n            <div className={styles.navBar}>\n                <div className={styles.navBar__upperBlock}>\n                    <i className=\"material-icons\" onClick={() => {\n                        props.menuClickHandle()\n                    }}>{props.showNavBar ? \"keyboard_arrow_right\" : \"keyboard_arrow_left\"}</i>\n\n                    <NavLink to=\"/\" className={styles.link}>P</NavLink>\n                    <NavLink to=\"/login\" className={styles.link}>L</NavLink>\n                    <NavLink to=\"/registration\" className={styles.link}>R</NavLink>\n                    <NavLink to=\"/forgot\" className={styles.link}>F</NavLink>\n\n                </div>\n            </div>\n            <div className={`${styles.navBarExtension} ${props.showNavBar && styles.navBarExtensionHide}`}>\n                <div className={styles.navBarExtension__upperBlock}>\n                    <div>Menu</div>\n                    <div>Profile</div>\n                    <div>Login</div>\n                    <div>Registration</div>\n                    <div>Forgot password</div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default NavBar;","import React from 'react';\nimport styles from './Login.module.scss';\n\n\nfunction Login (props: any) {\n\n    return (\n        <div className={styles.wrapper}>\n            Login\n        </div>\n    );\n}\n\nexport default Login;","import React from 'react';\nimport styles from './Input.module.scss'\n\n\nfunction Input(props: any) {\n\n    return (\n        <>\n            <input type=\"text\" placeholder={props.placeholder} className={styles.input} onClick={props.onClick}\n                   onChange={props.onChange} value={props.value}/>\n        </>\n    );\n}\n\nexport default Input;","import React from 'react';\nimport styles from './Button.module.scss'\n\n\nfunction Button(props: any) {\n\n    return (\n        <>\n            <button className={`${styles.button} ${props.color === 'red' ? styles.red : styles.blue} `}\n            onClick={props.onClick} onChange={props.onChange} value={props.value}>\n                {props.description}\n            </button>\n        </>\n    );\n}\n\nexport default Button;","import axios from \"axios\";\n\ntype responseType = {\n    addedUser: {email: string, isAdmin: boolean, __v: number, _id: string}\n    success: boolean\n};\n\nexport const RegisterAPI = {\n    register: (email: string, password: string) => {\n        return axios.post<responseType>\n        ('https://cards-nya-back.herokuapp.com/1.0/auth/register',{email, password});\n    }\n};\n\n","import {RegisterAPI} from \"../3_dal/RegistrationApi\";\nimport {Dispatch} from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport {storeType} from \"../../../BLL/redux-store\";\n\nexport type initialStateType = {\n    //  loading: boolean,\n    success: boolean,\n    error: string,\n}\n\nconst initialState: initialStateType = {\n    //  loading: false,\n    success: false,\n    error: ''\n};\n\nexport const registerReducer = (state = initialState, action: actionTypes): initialStateType => {\n    switch (action.type) {\n        /*case 'SET_LOADING':\n            return {\n                ...state,\n                //   loading: action.loading,\n                success: false,\n                error: ''\n            };*/\n\n        case 'SET_SUCCESS':\n            return {\n                ...state,\n                // loading: false,\n                success: action.success,\n                error: ''\n            };\n\n        case 'SET_ERROR':\n            return {\n                ...state,\n                // loading: false,\n                success: false,\n                error: action.error\n            };\n\n        default:\n            return state\n    }\n};\n\nconst SET_SUCCESS = 'SET_SUCCESS';\nconst SET_ERROR = 'SET_ERROR';\n\ntype actionTypes = setSuccessAction | setErrorAction;\n\ntype setSuccessAction = {\n    type: typeof SET_SUCCESS,\n    success: boolean\n};\n\ntype setErrorAction = {\n    type: typeof SET_ERROR,\n    error: string\n}\n\nconst setSuccessAC = (success: boolean): setSuccessAction => ({\n        type: SET_SUCCESS,\n        success\n});\n\nconst setErrorAC = (error: string): setErrorAction => ({\n        type: 'SET_ERROR',\n        error\n});\n\nexport const registerThunk = (email: string, password: string, confirmedPassword: string)\n    :ThunkAction<Promise<void>, storeType, unknown, actionTypes>=>{\n    return async (dispatch: any) => {\n        if (password !== confirmedPassword)\n            dispatch(setErrorAC('Password is not match'));\n        else {\n            try{\n                await RegisterAPI.register(email, password);\n                dispatch(setSuccessAC(true));\n            }\n            catch (e) {\n                const err = e.response.data.error;\n                dispatch(setErrorAC(err))\n            }\n        }\n    }\n};\n\n\n","import React, {ChangeEvent, useCallback, useState} from 'react';\nimport styles from './Registration.module.scss';\nimport Input from \"../../common/input/Input\";\nimport Button from \"../../common/button/Button\";\nimport {registerThunk} from \"../2_bll/registerReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {storeType} from \"../../../BLL/redux-store\";\nimport {Redirect} from \"react-router-dom\";\n\n\nfunction Registration (props: any) {\n\n    let [email, setEmail] = useState<string>('');\n    let [password, setPassword] = useState<string>('');\n    let [confirmPassword, setConfirmPassword] = useState<string>('');\n\n    const setEmailCallback = useCallback(\n        (e: ChangeEvent<HTMLInputElement>)=>setEmail(e.target.value),\n        [email]\n    );\n\n    const setPasswordCallback = useCallback(\n        (e: ChangeEvent<HTMLInputElement>)=>setPassword(e.target.value),\n        [password]\n    );\n\n    const setConfirmPasswordCallback = useCallback(\n        (e: ChangeEvent<HTMLInputElement>)=>setConfirmPassword(e.target.value),\n        [confirmPassword]\n    );\n\n    const dispatch = useDispatch();\n    const registerCallback = useCallback(()=>\n        dispatch(registerThunk(email, password, confirmPassword)),\n        [email, password, confirmPassword, dispatch]\n    );\n\n    const {success, error} = useSelector((store: storeType) => store.register);\n\n    if(success && error === '')\n        return <Redirect to='/login'/>;\n\n    return (\n        <div className={styles.wrapper}>\n            <Input placeholder={'Email'} value={email} onChange={setEmailCallback}/>\n            <Input placeholder={'password'} value={password} onChange={setPasswordCallback}/>\n            <Input placeholder={'confirm password'} value={confirmPassword}\n                   onChange={setConfirmPasswordCallback}/>\n            <Button description={'Register'} onClick={registerCallback}/>\n        </div>\n    );\n}\n\n\nexport default Registration;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://cards-nya-back.herokuapp.com/1.0/'\n});\n\nexport const forgotAPI = {\n  forgotPass: (email: string) => {\n    return instance.post\n      ('https://cards-nya-back.herokuapp.com/1.0/auth/forgot',\n        {\n          email: email,\n          html1: \"<a href='http://localhost:3000/#/reset-password/\",\n          html2: \"'>reset-password-link</a>\"\n        });\n  }\n};","import {forgotAPI} from \"../dal/ForgotAPI\";\n\nexport type initialStateType = typeof initialState\n\nconst initialState = {\n    email: '',\n    emailSended: null\n}\n\nexport const emailSendSuccess = (ans: any) => {\n    console.log('Все норм, мыло ушло')\n    return {type: \"EMAIL_SEND\", emailSended: true}\n\n}\nexport const sendEmailWithError = () => {\n    debugger\n    console.log('все плохо')\n    return {type: \"EMAIL_SEND\", emailSended: false}\n}\n\nexport const forgotReducer = (state = initialState, action: any): initialStateType => {\n    switch (action.type) {\n        case \"SET_EMAIL\":\n            return {\n                ...state,\n                email: action.email\n            };\n        case \"EMAIL_SEND\":\n            debugger\n            return {\n                ...state,\n                emailSended: action.emailSended\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const forgotPassTH = (email: string) => {\n    return async (dispatch: any) => {\n        try {\n           const ans =  await forgotAPI.forgotPass(email)\n            dispatch(emailSendSuccess(ans))\n        } catch (e) {\n            dispatch(sendEmailWithError())\n        }\n    }\n};","import React, {useCallback, useEffect, useState} from 'react';\nimport styles from './Forgot.module.scss';\nimport Input from \"../../common/input/Input\";\nimport Button from \"../../common/button/Button\";\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {forgotPassTH} from \"../bll/forgot-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\n\nfunction Forgot(props: any) {\n\n    const [email, setEmail] = useState<string>('');\n    const handleClickSendButton = async () => {\n\n        await dispatch(forgotPassTH(email));\n    }\n\n    const dispatch = useDispatch();\n    const redirect = () => {\n        return <Redirect to={\"/login\"}/>\n    }\n\n    const {emailSended} = useSelector((store: any) => store.forgot);\n    useEffect(() => {\n        if (emailSended === true) {\n            console.log('OKEEE')\n            alert(\"соообщеаю\")\n            redirect()\n        } else if (emailSended === false) {\n            console.log(\"zopa\")\n        }\n        return undefined\n    }, [emailSended]);\n\n    return (\n        <div className={styles.wrapper}>\n            <div className={styles.input}>\n                <Input placeholder={'Your email'} value={email} onChange={(e: any) => {\n                    setEmail(e.target.value)\n                }}/>\n                <Button description={\"Send\"} onClick={handleClickSendButton}/>\n            </div>\n            <div>\n                <NavLink to=\"/login\" className={styles.singIn}>Sing In</NavLink>\n            </div>\n        </div>\n    );\n}\n\nexport default Forgot;","import React from 'react';\nimport styles from './Profile.module.scss';\nimport Button from \"../common/button/Button\";\nimport Input from \"../common/input/Input\";\n\n\nfunction Profile(props: any) {\n\n    return (\n        <div className={styles.wrapper}>\n            Profile\n            <div className={styles.introduction}>\n                <Input/>\n                <div>\n                    <Button description={'Blue'} color={'blue'}/>\n                    <Button description={'Red'} color={'red'}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;","import React from 'react';\nimport {Switch, Route} from \"react-router-dom\";\nimport Login from \"../../components/2_Login/Login\";\nimport Registration from \"../../components/3_Registration/1_ui/Registration\";\nimport Forgot from \"../../components/4_Forgot/ui/Forgot\";\nimport Profile from \"../../components/1_Profile/Profile\";\n\n\ntype PageType = {\n    id: number;\n    title: string;\n    path?: string;\n    exact?: boolean;\n    component: any;\n};\n\nconst pages: Array<PageType> = [\n    {id: 0, title: 'login', path: '/login', component: () => <Login/>},\n    {id: 1, title: 'register', path: '/registration',  component: () => <Registration/>},\n    {id: 2, title: 'forgot', path: '/forgot', component: () => <Forgot/>},\n    {id: 3, title: 'profile', path: '/',  exact: true, component: () => <Profile/>},\n];\n\n\nconst Routes = () => {\n    return (\n        <Switch>\n            {pages.map(p => (\n                <Route\n                    key={p.id}\n                    path={p.path}\n                    exact={p.exact}\n                    render={p.component}\n                />\n            ))}\n        </Switch>\n    )\n};\n\nexport default Routes;\n","\nexport type initialStateType = typeof initialState\n\nconst initialState = {\n    text: ''\n}\n\n\nexport const loginReducer = (state = initialState, action: any): initialStateType => {\n    switch (action.type) {\n        default:\n            return state\n    }\n\n}","import {createStore, combineReducers, applyMiddleware} from \"redux\";\nimport thunkMiddleware from \"redux-thunk\"\nimport {loginReducer} from \"./login-reducer\";\nimport {forgotReducer} from \"../components/4_Forgot/bll/forgot-reducer\";\nimport { registerReducer } from \"../components/3_Registration/2_bll/registerReducer\";\n\n\n\nlet reducers = combineReducers({\n    login: loginReducer,\n    register: registerReducer,\n    forgot: forgotReducer\n})\n\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\nexport default store;\n\nexport type storeType = ReturnType<typeof reducers>\n\n","import React from 'react';\nimport styles from './App.module.css';\nimport NavBar from \"../components/NavBar/NavBar\";\nimport {HashRouter, Route} from \"react-router-dom\";\nimport Routes from \"./routes/Routes\";\nimport {Provider} from \"react-redux\";\nimport store from \"../BLL/redux-store\";\n\nclass App extends React.Component {\n\n    state = {\n        showNavBar: true\n    }\n    menuClickHandle = () => {\n        this.setState({showNavBar: !this.state.showNavBar})\n    }\n\n    render() {\n        return (\n            <HashRouter>\n                <Provider store={store}>\n                <div className={styles.App}>\n                    <NavBar\n                        menuClickHandle={this.menuClickHandle}\n                        showNavBar={this.state.showNavBar}\n                    />\n                    <Routes/>\n                </div>\n                </Provider>\n            </HashRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}