{"version":3,"sources":["components/common/loader/preloader.gif","components/common/packOfCards/PackOfCards.module.scss","components/4_Forgot/ui/Forgot.module.scss","components/common/button/Button.module.scss","components/2_Login/Login.module.scss","components/3_Registration/1_ui/Registration.module.scss","components/5_Tables/ui/Tables.module.scss","components/1_Profile/Profile.module.scss","main/App.module.css","components/common/input/Input.module.scss","components/5_Tables/ui/Paginator.module.css","components/NavBar/NavBar.module.scss","components/NavBar/NavBar.tsx","API/api.tsx","BLL/login-reducer.ts","components/common/input/Input.tsx","components/common/button/Button.tsx","components/2_Login/Login.tsx","components/3_Registration/3_dal/RegistrationApi.ts","components/3_Registration/2_bll/registerReducer.ts","components/3_Registration/1_ui/Registration.tsx","components/4_Forgot/dal/ForgotAPI.ts","components/4_Forgot/bll/forgot-reducer.ts","components/4_Forgot/ui/Forgot.tsx","components/1_Profile/Profile.tsx","components/5_Tables/dal/TablesAPI.ts","components/5_Tables/bll/tables-reducer.ts","components/common/packOfCards/PackOfCards.tsx","components/5_Tables/ui/Paginator.tsx","components/5_Tables/ui/Tables.tsx","main/routes/Routes.tsx","BLL/redux-store.ts","main/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NavBar","props","className","styles","navBar","navBar__upperBlock","onClick","menuClickHandle","showNavBar","to","link","navBar__lowerBlock","navBarExtension","navBarExtensionHide","navBarExtension__upperBlock","linkDescription","navBarExtension__lowerBlock","instance","axios","create","baseURL","AuthorizationAPI","email","password","rememberMe","post","token","document","cookie","initialState","success","error","isThereToken","loginReducer","state","action","type","setSuccessAC","setTokenAC","authThunk","dispatch","a","response","data","Input","placeholder","input","onChange","value","onBlur","Button","button","color","red","blue","disabled","description","Login","useState","setEmail","setPassword","setRememberMe","isLoading","useSelector","store","login","showError","setEmailCallback","useCallback","e","target","setPasswordCallback","setRememberMeCallback","useDispatch","loginCallback","then","err","LoginThunk","useEffect","wrapper","src","loader","alt","message","RegisterAPI","loading","SET_SUCCESS","SET_ERROR","SET_LOADING","setErrorAC","Registration","confirmPassword","setConfirmPassword","invalidField","setConfirmPasswordCallback","registerCallback","confirmedPassword","length","match","registerThunk","register","forgotAPI","emailSent","showMessage","showMessageToggle","toggle","loadingInProcess","loadingToggle","Forgot","disabledButton","disabledButtonToggle","forgot","setTimeout","console","log","forgotPassTH","singIn","Profile","introduction","tablesAPI","pageSize","currentPage","get","name","cardsPack","id","delete","newName","put","_id","deckName","pageCount","loadingTables","tables","searchedName","totalPacks","getTablesSuccess","ans","addDeckSuccess","deleteDeckSuccess","renameDeckSuccess","loadingToggleAC","loadingRenameToggleAC","setSearchedPack","packs","setPaginatorCurrentPage","PackOfCards","showInput","showInputToggle","changeName","deleteCardDeck","deletedCardsPack","deleteDeckTH","main","changeButtonWrapper","renameButton","deleteButtonWrapper","deleteButton","changeDeckNameTH","Paginator","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","setPortionNumberCallback","val","filter","p","map","key","selectedPage","defaultValue","setPaginatorPageSize","Tables","newDeckName","setNewDeckName","setSearchedNameCallback","setSearchedName","cardPacksTotalCount","getTablesTH","getTables","newCardsPack","addNewDeckTH","cardPacks","descendingSortByNameTH","ascendingSortHandlerSortByNameTH","title","path","component","exact","Routes","render","reducers","combineReducers","slice","t","tl","updatedCardsPack","createStore","applyMiddleware","thunkMiddleware","App","setState","this","React","Component","Boolean","window","location","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.64e7d508.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.d01db4ec.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PackOfCards_main__Jv5Zc\",\"wrapper\":\"PackOfCards_wrapper__130B0\",\"changeButtonWrapper\":\"PackOfCards_changeButtonWrapper__2eVJl\",\"renameButton\":\"PackOfCards_renameButton__KOfV3\",\"deleteButtonWrapper\":\"PackOfCards_deleteButtonWrapper__20RII\",\"deleteButton\":\"PackOfCards_deleteButton__3fEdP\",\"loader\":\"PackOfCards_loader__3cqWn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Forgot_wrapper__p4CpK\",\"singIn\":\"Forgot_singIn__2QqXC\",\"input\":\"Forgot_input__1kc8l\",\"message\":\"Forgot_message__SKEZ1\",\"loader\":\"Forgot_loader__2eWnp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__aD3e1\",\"red\":\"Button_red__23PuC\",\"blue\":\"Button_blue__26HuO\",\"disabled\":\"Button_disabled__31_Cw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__2teXa\",\"loader\":\"Login_loader__Gy6hG\",\"message\":\"Login_message___QPJw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Registration_wrapper__FBY9v\",\"message\":\"Registration_message__2t-4U\",\"loader\":\"Registration_loader__224UO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Tables_wrapper__2jPB4\",\"tables\":\"Tables_tables__1KKTK\",\"loader\":\"Tables_loader__1G7B-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__34_Q4\",\"introduction\":\"Profile_introduction__3znfv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16cJx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2FfA1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__1AxOA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"NavBar_navLink__3jCbp\",\"navBar\":\"NavBar_navBar__169o_\",\"navBar__upperBlock\":\"NavBar_navBar__upperBlock__qc2oW\",\"navBar__lowerBlock\":\"NavBar_navBar__lowerBlock__3g222\",\"link\":\"NavBar_link__3U1xr\",\"navBarExtension\":\"NavBar_navBarExtension__YcT2y\",\"navBarExtensionHide\":\"NavBar_navBarExtensionHide__2vlmv\",\"navBarExtension__upperBlock\":\"NavBar_navBarExtension__upperBlock__3s2dJ\",\"navBarExtension__lowerBlock\":\"NavBar_navBarExtension__lowerBlock__2Dsj7\",\"linkDescription\":\"NavBar_linkDescription__gLFTI\"};","import React from 'react';\nimport styles from './NavBar.module.scss';\nimport {NavLink} from \"react-router-dom\";\n\nfunction NavBar(props: any) {\n    return (\n        <>\n            <div className={styles.navBar}>\n                <div className={styles.navBar__upperBlock}>\n                    <i className=\"material-icons\" onClick={() => {\n                        props.menuClickHandle()\n                    }}>{props.showNavBar ? \"keyboard_arrow_right\" : \"keyboard_arrow_left\"}</i>\n\n                    <NavLink to=\"/\" className={styles.link}>P</NavLink>\n                    <NavLink to=\"/login\" className={styles.link}>L</NavLink>\n                    <NavLink to=\"/registration\" className={styles.link}>R</NavLink>\n                    <NavLink to=\"/forgot\" className={styles.link}>F</NavLink>\n                    <NavLink to=\"/tables\" className={styles.link}>T</NavLink>\n\n                </div>\n                <div className={styles.navBar__lowerBlock}>\n                    <NavLink to=\"/\" className={styles.link}>\n                        <i className=\"material-icons\">perm_identity</i>\n                    </NavLink>\n\n                    {/*<NavLink to=\"/login\" className={styles.link}>T</NavLink>*/}\n                </div>\n            </div>\n            <div className={`${styles.navBarExtension} ${props.showNavBar && styles.navBarExtensionHide}`}>\n                <div className={styles.navBarExtension__upperBlock}>\n                    <div>Menu</div>\n                    <NavLink to=\"/\" className={styles.linkDescription}>Profile</NavLink>\n                    <NavLink to=\"/login\" className={styles.linkDescription}>Login</NavLink>\n                    <NavLink to=\"/registration\" className={styles.linkDescription}>Registration</NavLink>\n                    <NavLink to=\"/forgot\" className={styles.linkDescription}>Forgot password</NavLink>\n                    <NavLink to=\"/tables\" className={styles.linkDescription}>Tables?</NavLink>\n                </div>\n                <div className={styles.navBarExtension__lowerBlock}>\n                    <NavLink to=\"/\" className={styles.linkDescription}>Profile</NavLink>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default NavBar;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://cards-nya-back.herokuapp.com/1.0/'\n});\n\n\nexport const AuthorizationAPI = {\n    login(email: string | null, password: string | null, rememberMe: boolean | null) {\n        return instance.post(`auth/login`, {email, password, rememberMe})\n    },\n    authMe(){\n        return axios.post('https://cards-nya-back.herokuapp.com/1.0/auth/me',{\n            token: document.cookie})\n    }\n};","import {AuthorizationAPI} from \"../API/api\";\n\nexport type initialStateType = {\n    success: boolean,\n    error: string,\n    isThereToken: boolean\n}\n\nconst initialState: initialStateType = {\n    success: false,\n    error: '',\n    isThereToken: false\n};\n\nconst SET_SUCCESS = 'SET_SUCCESS';\nconst SET_ERROR = 'SET_ERROR';\nconst SET_TOKEN = 'SET_TOKEN';\n\nexport const loginReducer = (state = initialState, action: any): initialStateType => {\n    switch (action.type) {\n        case SET_SUCCESS:\n            return {\n                ...state,\n                success: action.success,\n                error: ''\n            };\n\n        case SET_ERROR:\n            return {\n                ...state,\n                success: false,\n                error: action.error\n            };\n        case SET_TOKEN:\n            return {\n                ...state,\n                isThereToken: action.isThereToken\n            };\n        default:\n            return state\n    }\n};\n\ntype setSuccessAction = {\n    type: typeof SET_SUCCESS,\n    success: boolean\n};\n\ntype setErrorAction = {\n    type: typeof SET_ERROR,\n    error: string\n}\n\nexport const setSuccessAC = (success: boolean): setSuccessAction => ({\n    type: SET_SUCCESS,\n    success\n});\n\nconst setErrorAC = (error: string): setErrorAction => ({\n    type: SET_ERROR,\n    error\n});\n\nexport const setTokenAC = (isThereToken: boolean) => ({\n    type: SET_TOKEN,\n    isThereToken\n});\n\n\nexport const LoginThunk = (email: string | null, password: string | null, rememberMe: boolean | null) =>\n    (dispatch: any) => {\n        AuthorizationAPI.login(email, password, rememberMe)\n            .then((response) => {\n                    document.cookie = `${response.data.token}; max-age=3600`;\n                    dispatch(setSuccessAC(true));\n                },\n                (e) => {\n                    const err = e.response.data.error;\n                    dispatch(setErrorAC(err))\n                })\n\n    };\n\nexport const authThunk = () => async (dispatch: any) => {\n    try {\n        const response = await AuthorizationAPI.authMe();\n        dispatch(setTokenAC(true));\n        document.cookie = `${response.data.token}; max-age=3600`\n\n    } catch (e) {\n        dispatch(setTokenAC(false));\n    }\n};\n\n\nexport default loginReducer;","import React from 'react';\nimport styles from './Input.module.scss'\n\n\nfunction Input(props: any) {\n\n    return (\n        <>\n            <input\n                type={props.type ? props.type : \"text\"}\n                placeholder={props.placeholder} className={styles.input}\n                onClick={props.onClick}\n                onChange={props.onChange}\n                value={props.value}\n                onBlur={props.onBlur}\n            />\n        </>\n    );\n}\n\nexport default Input;","import React from 'react';\nimport styles from './Button.module.scss'\n\n\nfunction Button(props: any) {\n\n    return (\n        <>\n            <button\n                className={`${styles.button}\n                ${props.color === 'red' ? styles.red : styles.blue}\n                ${props.disabled && styles.disabled}`}\n                onClick={props.onClick}\n                onChange={props.onChange}\n                value={props.value}\n                disabled={props.disabled}\n            >\n                {props.description}\n            </button>\n        </>\n    );\n}\n\nexport default Button;","import React, {ChangeEvent, useCallback, useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {authThunk, LoginThunk} from '../../BLL/login-reducer';\nimport styles from './Login.module.scss'\nimport Input from \"../common/input/Input\";\nimport Button from \"../common/button/Button\";\nimport {storeType} from \"../../BLL/redux-store\";\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport loader from \"../common/loader/preloader.gif\";\n\n\nconst Login = () => {\n\n    let [email, setEmail] = useState<string>('');\n    let [password, setPassword] = useState<string>('');\n    let [rememberMe, setRememberMe] = useState<boolean>(false);\n    const {isLoading} = useSelector((store: any) => store.login);\n    const {showError} = useSelector((store: any) => store.login);\n\n    const setEmailCallback = useCallback(\n        (e: ChangeEvent<HTMLInputElement>) => setEmail(e.target.value),\n        [setEmail]\n    );\n\n    const setPasswordCallback = useCallback(\n        (e: ChangeEvent<HTMLInputElement>) => setPassword(e.target.value),\n        [setPassword]\n    );\n\n    const setRememberMeCallback = useCallback(\n        () => setRememberMe(true),\n        [setRememberMe]\n    );\n\n    let dispatch = useDispatch();\n    const loginCallback = useCallback(() => {\n            dispatch(LoginThunk(email, password, rememberMe))\n        },\n        [email, password, rememberMe, dispatch]\n    );\n\n    const {success, error, isThereToken} = useSelector((store: storeType) => store.login);\n\n    useEffect(() => {\n        if (!isThereToken && document.cookie) {\n            dispatch(authThunk());\n        }\n    }, [dispatch, isThereToken]);\n\n\n    if ((success && error === '') || (isThereToken && document.cookie)) {\n        return <Redirect to='/tables'/>;\n    }\n\n\n\n    return (\n        <div className={styles.wrapper}>\n            <Input placeholder={'Email'} value={email} onChange={setEmailCallback} type={\"email\"}/>\n            <Input placeholder={'password'} type={\"password\"} value={password} onChange={setPasswordCallback}/>\n            <Input type={\"checkbox\"} onChange={setRememberMeCallback}/>\n            <Button description={'Login'} onClick={loginCallback} disabled={isLoading}/>\n            {isLoading && <div><img src={loader} className={styles.loader} alt=\"loading\"/></div>}\n            {showError && <div className={styles.message}>{error}</div>}\n            <NavLink to=\"/registration\" >Registration</NavLink>\n            <NavLink to=\"/forgot\" >Forgot</NavLink>\n        </div>\n    );\n};\n\n\nexport default Login;","import axios from \"axios\";\n\ntype responseType = {\n    addedUser: {email: string, isAdmin: boolean, __v: number, _id: string}\n    success: boolean\n};\n\nexport const RegisterAPI = {\n    register: (email: string, password: string) => {\n        return axios.post<responseType>\n        ('https://cards-nya-back.herokuapp.com/1.0/auth/register',{email, password});\n    }\n};\n\n","import {RegisterAPI} from \"../3_dal/RegistrationApi\";\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\nimport {storeType} from \"../../../BLL/redux-store\";\n\nexport type initialStateType = {\n    loading: boolean,\n    success: boolean,\n    error: string,\n}\n\nconst initialState: initialStateType = {\n    loading: false,\n    success: false,\n    error: ''\n};\n\nexport const registerReducer = (state = initialState, action: actionTypes): initialStateType => {\n    switch (action.type) {\n        case SET_LOADING:\n            return {\n                ...state,\n                loading: action.loading,\n            };\n\n        case SET_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: action.success,\n                error: ''\n            };\n\n        case SET_ERROR:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.error\n            };\n\n        default:\n            return state\n    }\n};\n\nconst SET_SUCCESS = 'SET_SUCCESS';\nconst SET_ERROR = 'SET_ERROR';\nconst SET_LOADING = 'SET_LOADING';\n\ntype actionTypes = setSuccessAction | setErrorAction | setLoadingAction;\n\ntype setSuccessAction = {\n    type: typeof SET_SUCCESS,\n    success: boolean\n};\n\ntype setErrorAction = {\n    type: typeof SET_ERROR,\n    error: string\n};\n\ntype setLoadingAction = {\n    type: typeof SET_LOADING,\n    loading: boolean\n};\n\nconst setSuccessAC = (success: boolean): setSuccessAction => ({\n    type: SET_SUCCESS,\n    success\n});\n\nconst setErrorAC = (error: string): setErrorAction => ({\n    type: SET_ERROR,\n    error\n});\n\nconst setLoadingAC = (loading: boolean): setLoadingAction => ({\n    type: SET_LOADING,\n    loading\n});\n\nexport const registerThunk = (email: string, password: string, confirmedPassword: string)\n    : ThunkAction<Promise<void>, storeType, unknown, actionTypes> => {\n    return async (dispatch: ThunkDispatch<storeType, unknown, actionTypes>) => {\n        dispatch(setLoadingAC(true));\n        if (password !== confirmedPassword)\n            dispatch(setErrorAC('Password is not match'));\n        else if(email === '' || password === '' || confirmedPassword === '')\n            dispatch(setErrorAC('All field is required!'));\n        else if(password.length<=7 || confirmedPassword.length<=7)\n            dispatch(setErrorAC('password must be more than 7 char!'));\n        else if(!email.match(/^[\\w][\\w-.]*@[\\w-]+\\.[a-z]{2,7}$/i))\n            dispatch(setErrorAC('Email is not valid!'));\n        else {\n            try {\n                await RegisterAPI.register(email, password);\n                dispatch(setSuccessAC(true));\n            } catch (e) {\n                debugger\n                const err = e.response.data.error;\n                dispatch(setErrorAC(err))\n            }\n        }\n    }\n};\n\n\n","import React, {ChangeEvent, useCallback, useState} from 'react';\nimport styles from './Registration.module.scss';\nimport Input from \"../../common/input/Input\";\nimport Button from \"../../common/button/Button\";\nimport {registerThunk} from \"../2_bll/registerReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {storeType} from \"../../../BLL/redux-store\";\nimport {Redirect} from \"react-router-dom\";\n\n\nfunction Registration () {\n\n    let [email, setEmail] = useState<string>('');\n    let [password, setPassword] = useState<string>('');\n    let [confirmPassword, setConfirmPassword] = useState<string>('');\n    let validateMessage = '';\n    let [invalidField] = useState<boolean>(false);\n\n    const setEmailCallback = useCallback(\n        (e: ChangeEvent<HTMLInputElement>)=>setEmail(e.target.value),\n        [setEmail]\n    );\n\n    const setPasswordCallback = useCallback(\n        (e: ChangeEvent<HTMLInputElement>)=>setPassword(e.target.value),\n        [setPassword]\n    );\n\n    const setConfirmPasswordCallback = useCallback(\n        (e: ChangeEvent<HTMLInputElement>)=>setConfirmPassword(e.target.value),\n        [setConfirmPassword]\n    );\n\n\n    const dispatch = useDispatch();\n    const registerCallback = useCallback(()=>{\n        if (validateMessage === '') {\n            dispatch(registerThunk(email, password, confirmPassword))\n        }},\n        [email, password, confirmPassword, validateMessage, dispatch]\n    );\n\n    const {success, error, loading} = useSelector((store: storeType) => store.register);\n\n    if(success && error === '')\n        return <Redirect to='/login'/>;\n\n\n    return (\n        <div className={styles.wrapper}>\n            <Input type='email' placeholder={'Email'} value={email} onChange={setEmailCallback}/>\n            <Input type='password' placeholder={'password'} value={password} onChange={setPasswordCallback}/>\n            <Input type='password' placeholder={'confirm password'} value={confirmPassword}\n                   onChange={setConfirmPasswordCallback}/>\n            <Button description={'Register'} onClick={registerCallback}/>\n            {invalidField && <div className={styles.message}>{validateMessage}</div>}\n            {error && <div className={styles.message}>{error}</div>}\n            {loading && <div>Loading</div>}\n        </div>\n    );\n}\n\n\nexport default Registration;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://cards-nya-back.herokuapp.com/1.0/'\n});\n\nexport const forgotAPI = {\n  forgotPass: (email: string) => {\n    return instance.post\n      ('auth/forgot',\n        {\n          email: email\n        });\n  }\n};","import {forgotAPI} from \"../dal/ForgotAPI\";\n\nexport type initialStateType = typeof initialState\n\nconst initialState = {\n    email: '',\n    emailSent: null,\n    isLoading: false,\n    showMessage: false,\n    message: ''\n}\n\nexport const emailSendSuccess = (ans: any) => {\n    return {type: \"EMAIL_SENT\", emailSent: true}\n}\n\nexport const sendEmailWithError = () => {\n    console.log('все плохо')\n    return {type: \"EMAIL_SENT\", emailSent: false}\n}\n\nexport const showMessageToggle = (toggle: boolean, message: string) => {\n    return {type: \"TOGGLE_MESSAGE\", toggle, message}\n}\n\nexport const loadingInProcess = (loadingToggle: boolean) => {\n    return {type: \"LOADING_IN_PROCESS\", loadingToggle}\n}\n\nexport const forgotReducer = (state = initialState, action: any): initialStateType => {\n    switch (action.type) {\n        case \"SET_EMAIL\":\n            return {\n                ...state,\n                email: action.email\n            };\n        case \"EMAIL_SENT\":\n            return {\n                ...state,\n                emailSent: action.emailSent,\n                showMessage: true\n            };\n        case \"TOGGLE_MESSAGE\":\n            return {\n                ...state,\n                showMessage: action.toggle,\n                message: action.message\n            };\n        case \"LOADING_IN_PROCESS\":\n            return {\n                ...state,\n                isLoading: action.loadingToggle\n            };\n        default:\n            return state\n    }\n}\n\nexport const forgotPassTH = (email: string) => {\n    return async (dispatch: any) => {\n        dispatch(loadingInProcess(true))\n        try {\n            const ans = await forgotAPI.forgotPass(email)\n            dispatch(emailSendSuccess(ans))\n        } catch (e) {\n            dispatch(sendEmailWithError())\n        } finally {\n            dispatch(loadingInProcess(false))\n        }\n    }\n};","import React, {useEffect, useState} from 'react';\nimport styles from './Forgot.module.scss';\nimport Input from \"../../common/input/Input\";\nimport Button from \"../../common/button/Button\";\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {forgotPassTH, showMessageToggle} from \"../bll/forgot-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport loader from \"./../../common/loader/preloader.gif\"\n\n\nfunction Forgot() {\n\n    const dispatch = useDispatch();\n\n    const [email, setEmail] = useState<string>('');\n    const [disabledButton, disabledButtonToggle] = useState<boolean>(false);\n    const {emailSent} = useSelector((store: any) => store.forgot);\n    const {isLoading} = useSelector((store: any) => store.forgot);\n    const {showMessage} = useSelector((store: any) => store.forgot);\n    const {message} = useSelector((store: any) => store.forgot);\n\n    const handleClickSendButton = () => {\n        disabledButtonToggle(true)\n        dispatch(forgotPassTH(email));\n    };\n\n    const redirect = () => {\n        return <Redirect to={\"/login\"}/>\n    };\n\n    useEffect(() => {\n        if (emailSent === true) {\n            disabledButtonToggle(false)\n            dispatch(showMessageToggle(true, \"Password recovery link sent to email\"))\n            setTimeout(() => {\n                dispatch(showMessageToggle(false, ''))\n            }, 3000)\n            redirect()\n        } else if (emailSent === false) {\n            disabledButtonToggle(false)\n            dispatch(showMessageToggle(true, \"Error\"))\n            setTimeout(() => {\n                dispatch(showMessageToggle(false, ''))\n            }, 3000)\n            console.log(\"не отправило\")\n        }\n    }, [emailSent, dispatch]);\n\n    return (\n        <div className={styles.wrapper}>\n            <div className={styles.input}>\n                <Input placeholder={'Your email'}\n                       value={email} onChange={(e: any) => {\n                    setEmail(e.target.value)\n                }}/>\n                <Button description={\"Send\"} onClick={handleClickSendButton} disabled={disabledButton}/>\n            </div>\n            <div>\n                <NavLink to=\"/login\" className={styles.singIn}>Sing In</NavLink>\n            </div>\n            {showMessage && <div className={styles.message}>{message}</div>}\n            {isLoading && <div><img src={loader} className={styles.loader} alt=\"loading\"/></div>}\n        </div>\n    );\n}\n\nexport default Forgot;","import React, {useEffect} from 'react';\nimport styles from './Profile.module.scss';\nimport Button from \"../common/button/Button\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {storeType} from \"../../BLL/redux-store\";\nimport {authThunk, setTokenAC, setSuccessAC} from \"../../BLL/login-reducer\";\nimport {Redirect} from \"react-router-dom\";\n\n\nfunction Profile() {\n\n    const {isThereToken, success} = useSelector((store: storeType) => store.login);\n\n    let dispatch = useDispatch();\n    useEffect(() => {\n        if(document.cookie && !isThereToken)\n            dispatch(authThunk());\n    }, [dispatch, isThereToken]);\n\n    const deleteToken = () => {\n        document.cookie = `${document.cookie}; max-age=-1`;\n        dispatch(setTokenAC(false));\n        dispatch(setSuccessAC(false))\n    };\n\n    if(!isThereToken && !document.cookie && !success)\n        return <Redirect to='/login'/>;\n\n    return (\n        <div className={styles.wrapper}>\n            Profile\n            <div className={styles.introduction}>\n                <div>\n                    <Button description={'Log Out'} color={'red'} onClick={deleteToken}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;","import axios from \"axios\";\n\ntype responseType = {\n    cardPacks: [],\n    cardPacksTotalCount: number,\n    maxGrade: number,\n    minGrade: number,\n    page: number,\n    pageCount: number,\n    token: string,\n    tokenDeathTime: number,\n    newCardsPack: object,\n    deletedCardsPack: {\n        _id: string\n    },\n}\n\nconst instance = axios.create({\n    baseURL: 'https://cards-nya-back.herokuapp.com/1.0/'\n});\n\nexport const tablesAPI = {\n    getTables: (pageSize: number, currentPage: number) => {\n        let token = document.cookie\n        return instance.get<responseType>\n        (`cards/pack?&token=${token}&pageCount=${pageSize}&page=${currentPage}`);\n    },\n    addNewDeck: (name: string) => {\n        let token = document.cookie\n        return instance.post<responseType>\n        (`cards/pack`, {cardsPack: {name: name}, token: token})\n    },\n    deleteDeck: (id: string) => {\n        let token = document.cookie\n        return instance.delete<responseType>(\n            `cards/pack?token=${token}&id=${id}`\n        )\n    },\n    changeDeckName: (newName: string, id: string) => {\n        let token = document.cookie\n        return instance.put<responseType>(\n            `cards/pack`, {cardsPack: {name: newName, _id: id}, token: token}\n        )\n    },\n    getSearchedDeck: (deckName: string) => {\n        let token = document.cookie;\n        return instance.get<responseType>(`cards/pack?&token=${token}&packName=${deckName}`);\n    },\n    ascendingSortByName: (pageCount: number, currentPage: number) => {\n        let token = document.cookie;\n        return instance.get<responseType>\n        (`cards/pack?&token=${token}&pageCount=${pageCount}&page=${currentPage}&sortPacks=1name`);\n    },\n    descendingSortByName: (pageCount: number, currentPage: number) => {\n        let token = document.cookie;\n        return instance.get<responseType>\n        (`cards/pack?&token=${token}&pageCount=${pageCount}&page=${currentPage}&sortPacks=-1name`);\n    },\n};\n","import {tablesAPI} from \"../dal/TablesAPI\";\nimport {storeType} from \"../../../BLL/redux-store\";\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\n\n\nconst SET_TABLES = 'SET_TABLES';\nconst ADD_NEW_DECK = 'ADD_NEW_DECK';\nconst DELETE_DECK = 'DELETE_DECK';\nconst RENAME_DECK = 'RENAME_DECK';\nconst LOADING_TABLES = 'LOADING_TABLES';\nconst SET_SEARCHED_NAME = 'SET_SEARCHED_NAME';\nconst SET_SEARCHED_PACKS = 'SET_SEARCHED_PACKS';\nconst SET_PAGINATOR_PAGE_SIZE = 'SET_PAGINATOR_PAGE_SIZE';\nconst SET_PAGINATOR_CURRENT_PAGE = \"SET_PAGINATOR_CURRENT_PAGE\";\nconst SET_TOTAL_PACKS = \"SET_TOTAL_PACKS\";\nconst LOADING_RENAME_TOGGLE = \"LOADING_RENAME_TOGGLE\";\n\nexport type initialStateType = {\n    loadingTables: boolean\n    tables: object[],\n    searchedName: string,\n    currentPage: number,\n    pageSize: number,\n    totalPacks: number\n}\n\nconst initialState = {\n    loadingTables: false,\n    tables: [{name: \"first\", _id: 1, loading: false}, {name: \"second\", _id: 2}, {name: \"third\", _id: 3}],\n    searchedName: '',\n    currentPage: 1,\n    pageSize: 4,\n    totalPacks: 78\n};\n\ntype getTablesSuccessType = {\n    type: typeof SET_TABLES,\n    ans: object\n}\n\ntype addDeckSuccess = {\n    type: typeof ADD_NEW_DECK,\n    ans: object\n}\n\ntype deleteDeckSuccess = {\n    type: typeof DELETE_DECK,\n    ans: string\n}\n\ntype renameDeckSuccess = {\n    type: typeof RENAME_DECK,\n    ans: object\n}\n\ntype loadingToggleACType = {\n    type: typeof LOADING_TABLES,\n    toggle: boolean\n}\ntype loadingRenameToggleACType = {\n    type: typeof LOADING_RENAME_TOGGLE,\n    id: string,\n    toggle: boolean\n}\n\ntype setSearchedNameType = {\n    type: typeof SET_SEARCHED_NAME,\n    searchedName: string\n}\n\ntype setSearchedPackType = {\n    type: typeof SET_SEARCHED_PACKS,\n    packs: Array<object>\n}\n\ntype setPaginatorPageSizeType = {\n    type: typeof SET_PAGINATOR_PAGE_SIZE,\n    pageSize: number\n}\n\ntype setPaginatorCurrentPageType = {\n    type: typeof SET_PAGINATOR_CURRENT_PAGE,\n    currentPage: number\n}\n\ntype setTotalPacks = {\n    type: typeof SET_PAGINATOR_CURRENT_PAGE,\n    totalPacks: number\n}\n\nexport const getTablesSuccess = (ans: object): getTablesSuccessType => {\n    return {type: SET_TABLES, ans}\n}\nexport const addDeckSuccess = (ans: object): addDeckSuccess => {\n    return {type: ADD_NEW_DECK, ans}\n}\nexport const deleteDeckSuccess = (ans: string): deleteDeckSuccess => {\n    return {type: DELETE_DECK, ans}\n}\nexport const renameDeckSuccess = (ans: object): renameDeckSuccess => {\n    return {type: RENAME_DECK, ans}\n}\nexport const loadingToggleAC = (toggle: boolean): loadingToggleACType => {\n    return {type: LOADING_TABLES, toggle}\n}\nexport const loadingRenameToggleAC = (id: string, toggle: boolean): loadingRenameToggleACType => {\n    return {type: LOADING_RENAME_TOGGLE, id, toggle}\n}\n\nexport const setSearchedName = (searchedName: string): setSearchedNameType => {\n    return {\n        type: SET_SEARCHED_NAME,\n        searchedName\n    }\n};\n\nconst setSearchedPack = (packs: Array<object>): setSearchedPackType => {\n    return {\n        type: SET_SEARCHED_PACKS,\n        packs\n    }\n};\n\nexport const setPaginatorPageSize = (pageSize: number): setPaginatorPageSizeType => {\n    return {\n        type: SET_PAGINATOR_PAGE_SIZE,\n        pageSize,\n    }\n};\n\nexport const setPaginatorCurrentPage = (currentPage: number): setPaginatorCurrentPageType => {\n    return {\n        type: SET_PAGINATOR_CURRENT_PAGE,\n        currentPage\n    }\n};\n\nconst setTotalPacks = (totalPacks: number): setTotalPacks => {\n    return {\n        type: SET_PAGINATOR_CURRENT_PAGE,\n        totalPacks,\n    }\n};\n\ntype actionTypes =\n    getTablesSuccessType\n    | addDeckSuccess\n    | deleteDeckSuccess\n    | renameDeckSuccess\n    | loadingToggleACType\n    | loadingRenameToggleACType\n    | setSearchedNameType\n    | setSearchedPackType\n    | setPaginatorPageSizeType\n    | setPaginatorCurrentPageType\n    | setTotalPacks;\n\n\nexport const tablesReducer = (state = initialState, action: any): initialStateType => {\n    switch (action.type) {\n        case LOADING_TABLES:\n            return {\n                ...state,\n                loadingTables: action.toggle\n            };\n        case SET_TABLES:\n            return {\n                ...state,\n                tables: action.ans.data.cardPacks.map((i: any) => {\n                    return {...i, loading: false};\n                })\n            };\n        case ADD_NEW_DECK:\n            return {\n                ...state,\n                tables: [action.ans, ...state.tables].slice(0, state.pageSize)\n            };\n        case DELETE_DECK:\n            return {\n                ...state,\n                tables: state.tables.filter(t => t._id !== action.ans)\n            };\n        case LOADING_RENAME_TOGGLE:\n            return {\n                ...state,\n                tables: state.tables.map(tl => {\n                    if (tl._id !== action.id) return tl;\n                    else return {...tl, loading: action.toggle}\n                })\n            };\n        case RENAME_DECK:\n            return {\n                ...state,\n                tables: state.tables.map(tl => {\n                    if (tl._id !== action.ans.data.updatedCardsPack._id) return tl;\n                    else return {...tl, name: action.ans.data.updatedCardsPack.name, loading: true}\n                })\n            };\n        case SET_SEARCHED_NAME:\n            return {\n                ...state,\n                searchedName: action.searchedName\n            };\n        case SET_SEARCHED_PACKS:\n            return {\n                ...state,\n                tables: [...action.packs]\n            };\n        case SET_PAGINATOR_PAGE_SIZE:\n            return {\n                ...state,\n                pageSize: action.pageSize\n            };\n        case SET_PAGINATOR_CURRENT_PAGE:\n            if (action.currentPage)\n                return {\n                    ...state,\n                    currentPage: action.currentPage\n                };\n            else\n                return {\n                    ...state\n                };\n        case SET_TOTAL_PACKS:\n            return {\n                ...state,\n                currentPage: action.totalPacks\n            };\n        default:\n            return state\n    }\n}\n\nexport const searchNameTH = (deckName: string)\n    : ThunkAction<Promise<void>, storeType, unknown, actionTypes> => {\n    return async (dispatch: any) => {\n        dispatch(loadingToggleAC(true))\n        try {\n            const response = await tablesAPI.getSearchedDeck(deckName);\n            document.cookie = `${response.data.token}; max-age=3600`;\n            dispatch(setSearchedPack(response.data.cardPacks));\n        } catch (e) {\n\n        } finally {\n            dispatch(loadingToggleAC(false))\n        }\n    }\n};\n\nexport const ascendingSortHandlerSortByNameTH = (pageCount: number, currentPage: number)\n    : ThunkAction<Promise<void>, storeType, unknown, actionTypes> => {\n    return async (dispatch: ThunkDispatch<storeType, unknown, actionTypes>) => {\n        dispatch(loadingToggleAC(true))\n        try {\n            const response = await tablesAPI.ascendingSortByName(pageCount, currentPage);\n            document.cookie = `${response.data.token}; max-age=3600`;\n            dispatch(setSearchedPack(response.data.cardPacks));\n        } catch (e) {\n\n        } finally {\n            dispatch(loadingToggleAC(false))\n        }\n    }\n};\n\nexport const descendingSortByNameTH = (pageCount: number, currentPage: number)\n    : ThunkAction<Promise<void>, storeType, unknown, actionTypes> => {\n    return async (dispatch: ThunkDispatch<storeType, unknown, actionTypes>) => {\n        dispatch(loadingToggleAC(true))\n        try {\n            const response = await tablesAPI.descendingSortByName(pageCount, currentPage);\n            document.cookie = `${response.data.token}; max-age=3600`;\n            dispatch(setSearchedPack(response.data.cardPacks));\n        } catch (e) {\n\n        } finally {\n            dispatch(loadingToggleAC(false))\n        }\n    }\n};\n\n\nexport const getTablesTH = (pageSize: number, currentPage: number)\n    : ThunkAction<Promise<void>, storeType, unknown, actionTypes> => {\n    return async (dispatch: ThunkDispatch<storeType, unknown, actionTypes>) => {\n        dispatch(loadingToggleAC(true))\n        try {\n            const ans = await tablesAPI.getTables(pageSize, currentPage);\n            document.cookie = `${ans.data.token}; max-age=3600`;\n            dispatch(getTablesSuccess(ans));\n            dispatch(setTotalPacks(ans.data.cardPacksTotalCount));\n        } catch (e) {\n\n        } finally {\n            dispatch(loadingToggleAC(false))\n        }\n    }\n};\nexport const addNewDeckTH = (newDeckName: string)\n    : ThunkAction<Promise<void>, storeType, unknown, actionTypes> => {\n    return async (dispatch: ThunkDispatch<storeType, unknown, actionTypes>) => {\n        try {\n            const ans = await tablesAPI.addNewDeck(newDeckName)\n            document.cookie = `${ans.data.token}; max-age=3600`;\n            dispatch(addDeckSuccess(ans.data.newCardsPack))\n        } catch (e) {\n\n        } finally {\n\n        }\n    }\n};\nexport const deleteDeckTH = (id: string): ThunkAction<Promise<void>, storeType, unknown, actionTypes> => {\n    return async (dispatch: ThunkDispatch<storeType, unknown, actionTypes>) => {\n        try {\n            const ans = await tablesAPI.deleteDeck(id)\n            console.log(ans.data.deletedCardsPack._id)\n            document.cookie = `${ans.data.token}; max-age=3600`;\n            dispatch(deleteDeckSuccess(ans.data.deletedCardsPack._id))\n        } catch (e) {\n\n        } finally {\n\n        }\n    }\n};\nexport const changeDeckNameTH = (newName: string, id: string)\n    : ThunkAction<Promise<void>, storeType, unknown, actionTypes> => {\n    return async (dispatch: ThunkDispatch<storeType, unknown, actionTypes>) => {\n        dispatch(loadingRenameToggleAC(id, true))\n        try {\n            const ans = await tablesAPI.changeDeckName(newName, id)\n            document.cookie = `${ans.data.token}; max-age=3600`;\n            dispatch(renameDeckSuccess(ans))\n        } catch (e) {\n\n        } finally {\n            dispatch(loadingRenameToggleAC(id, false))\n        }\n    }\n};\n","import React, {useState} from 'react';\nimport styles from './PackOfCards.module.scss'\nimport {useDispatch} from \"react-redux\";\nimport {changeDeckNameTH, deleteDeckTH} from \"../../5_Tables/bll/tables-reducer\";\nimport Input from \"../input/Input\";\nimport loader from \"../loader/preloader.gif\";\n\n\nfunction PackOfCards(props: any) {\n    const dispatch = useDispatch();\n    const [showInput, showInputToggle] = useState<boolean>(false);\n    const [newName, changeName] = useState<string>('');\n\n    const deleteCardDeck = (id: string) => {\n        console.log(id)\n        dispatch(deleteDeckTH(id))\n    }\n    const onBlur = () => {\n        showInputToggle(false)\n        const id: string = props.id\n        dispatch(changeDeckNameTH(newName, id))\n    }\n\n    return (\n\n        <div className={styles.main}>\n            {props.loading && <div><img src={loader} className={styles.loader} alt=\"loading\"/></div>}\n            <div className={styles.wrapper}>\n                {props.name}\n                <div className={styles.changeButtonWrapper}>\n                    <button className={styles.renameButton} onClick={() => {\n                        showInputToggle(!showInput)\n                    }}>Rename\n                    </button>\n                </div>\n                <div className={styles.deleteButtonWrapper}>\n                    <button className={styles.deleteButton} onClick={() => {\n                        deleteCardDeck(props.id)\n                    }}>X\n                    </button>\n                </div>\n            </div>\n            <div>\n                {showInput && <Input\n                  placeholder={\"Enter new name\"}\n                  value={newName}\n                  onChange={(e: any) => {\n                      changeName(e.target.value)\n                  }}\n                  onBlur={onBlur}\n                />}\n            </div>\n        </div>\n\n    );\n}\n\nexport default PackOfCards;","import React, {ChangeEvent, useCallback, useState} from 'react';\nimport styles from './Paginator.module.css'\nimport {setPaginatorCurrentPage, setPaginatorPageSize} from \"../bll/tables-reducer\";\nimport {useDispatch} from \"react-redux\";\n\ntype paginatorType = {\n    totalPacks: number,\n    pageSize: number,\n    currentPage: number\n}\n\nconst Paginator: React.FC<paginatorType> = ({totalPacks, pageSize, currentPage}) => {\n\n    let dispatch = useDispatch();\n    let pagesCount = Math.ceil(totalPacks / pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n    let portionCount = Math.ceil(pagesCount / 5);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * 5 + 1;\n    let rightPortionPageNumber = portionNumber * 5;\n\n    const setPortionNumberCallback = useCallback((val) => setPortionNumber(val),\n        [setPortionNumber]);\n\n    return (\n        <div className=''>\n            <div>\n                {portionNumber > 1 &&\n                <button onClick={() => {\n                    setPortionNumberCallback(portionNumber - 1)\n                }}>prev</button>}\n                {portionNumber > 1 && <span onClick={() => {\n                    setPortionNumberCallback(1);\n                    dispatch(setPaginatorCurrentPage(1))\n                }}>1...</span>}\n                {pages\n                    .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                    .map(p => {\n                        return <span key={p} className={currentPage === p ? styles.selectedPage : ''}\n                                     onClick={() => {\n                                         dispatch(setPaginatorCurrentPage(p))\n                                     }}> {p} </span>\n                    })}\n                {portionCount > portionNumber && <span onClick={() => {\n                    setPortionNumberCallback(portionCount);\n                    dispatch(setPaginatorCurrentPage(pagesCount))\n                }}>...{pagesCount}</span>}\n                {portionCount > portionNumber &&\n                <button onClick={() => {\n                    setPortionNumberCallback(portionNumber + 1)\n                }}>next</button>}\n            </div>\n            <div>\n                <select defaultValue={4} onChange={(e: ChangeEvent<HTMLSelectElement>) => {\n                    dispatch(setPaginatorPageSize(+e.target.value))\n                }}>\n                    <option value={2}>2</option>\n                    <option value={4}>4</option>\n                    <option value={6}>6</option>\n                </select>\n            </div>\n        </div>\n    );\n};\n\nexport default Paginator;","import React, {ChangeEvent, useCallback, useEffect, useState} from 'react';\nimport styles from './Tables.module.scss'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    addNewDeckTH,\n    getTablesTH,\n    searchNameTH,\n    setSearchedName,\n    ascendingSortHandlerSortByNameTH,\n    descendingSortByNameTH\n} from \"../bll/tables-reducer\";\nimport PackOfCards from \"../../common/packOfCards/PackOfCards\";\nimport Input from \"../../common/input/Input\";\nimport Button from \"../../common/button/Button\";\nimport loader from \"../../common/loader/preloader.gif\";\nimport {Redirect} from \"react-router-dom\";\nimport Paginator from \"./Paginator\";\n\n\nfunction Tables() {\n    const dispatch = useDispatch();\n    const {tables, searchedName, pageSize, currentPage, loadingTables, totalPacks} = useSelector((store: any) => store.tables);\n    const [newDeckName, setNewDeckName] = useState<string>('');\n\n    const setSearchedNameCallback = useCallback(\n        (e: ChangeEvent<HTMLInputElement>) => dispatch(setSearchedName(e.target.value)),\n        [dispatch]\n    );\n\n    const handleClickSearchDeck = (): void => {\n        dispatch(searchNameTH(searchedName));\n    };\n\n    const handleClickAddNewDeck = (): void => {\n        dispatch(addNewDeckTH(newDeckName));\n        setNewDeckName('')\n    };\n\n    useEffect(() => {\n        dispatch(getTablesTH(pageSize, currentPage));\n    }, [dispatch, pageSize, currentPage]);\n\n\n    const getTables = tables.map((i: any) => {\n        return <PackOfCards name={i.name} id={i._id} key={i._id} loading={i.loading}/>\n    });\n\n    const ascendingSortHandler = (): void => {\n        dispatch(ascendingSortHandlerSortByNameTH(pageSize, currentPage))\n    };\n\n    const descendingSortByNameHandler = (): void => {\n        dispatch(descendingSortByNameTH(pageSize, currentPage))\n    };\n\n    if (!document.cookie)\n        return <Redirect to='/login'/>;\n\n    return (\n        <div className={styles.wrapper}>\n            Decks\n            {\n                loadingTables ? <div><img src={loader} className={styles.loader} alt=\"loading\"/></div> :\n                    <>\n                        <Input\n                            placeholder={\"New deck\"}\n                            onChange={(e: any) => {\n                                setNewDeckName(e.target.value)\n                            }}\n                            value={newDeckName}\n                        />\n                        <Button description={\"Add\"} onClick={handleClickAddNewDeck}/>\n                        <div className={styles.tables}>\n                            {getTables}\n                        </div>\n                    </>\n            }\n            <Paginator totalPacks={totalPacks} pageSize={pageSize} currentPage={currentPage}/>\n            <Input placeholder={'Search by name'} onChange={setSearchedNameCallback} value={searchedName}/>\n            <Button description='Search' onClick={handleClickSearchDeck}/>\n            <button onClick={descendingSortByNameHandler}>Sort by name -1</button>\n            <button onClick={ascendingSortHandler}>Sort by name 1</button>\n        </div>\n    );\n}\n\nexport default Tables;","import React from 'react';\nimport {Switch, Route} from \"react-router-dom\";\nimport Login from \"../../components/2_Login/Login\";\nimport Registration from \"../../components/3_Registration/1_ui/Registration\";\nimport Forgot from \"../../components/4_Forgot/ui/Forgot\";\nimport Profile from \"../../components/1_Profile/Profile\";\nimport Tables from \"../../components/5_Tables/ui/Tables\";\n\n\ntype PageType = {\n    id: number;\n    title: string;\n    path?: string;\n    exact?: boolean;\n    component: any;\n};\n\nconst pages: Array<PageType> = [\n    {id: 0, title: 'login', path: '/login', component: () => <Login/>},\n    {id: 1, title: 'register', path: '/registration',  component: () => <Registration/>},\n    {id: 2, title: 'forgot', path: '/forgot', component: () => <Forgot/>},\n    {id: 3, title: 'profile', path: '/',  exact: true, component: () => <Profile/>},\n    {id: 4, title: 'tables', path: '/tables',  exact: true, component: () => <Tables/>},\n];\n\n\nconst Routes = () => {\n    return (\n        <Switch>\n            {pages.map(p => (\n                <Route\n                    key={p.id}\n                    path={p.path}\n                    exact={p.exact}\n                    render={p.component}\n                />\n            ))}\n        </Switch>\n    )\n};\n\nexport default Routes;\n","import {createStore, combineReducers, applyMiddleware} from \"redux\";\nimport thunkMiddleware from \"redux-thunk\"\nimport {loginReducer} from \"./login-reducer\";\nimport {forgotReducer} from \"../components/4_Forgot/bll/forgot-reducer\";\nimport { registerReducer } from \"../components/3_Registration/2_bll/registerReducer\";\nimport {tablesReducer} from \"../components/5_Tables/bll/tables-reducer\";\n\n\n\nlet reducers = combineReducers({\n    login: loginReducer,\n    register: registerReducer,\n    forgot: forgotReducer,\n    tables: tablesReducer\n});\n\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\nexport default store;\n\n\nexport type storeType = ReturnType<typeof reducers>\n\n","import React from 'react';\nimport styles from './App.module.css';\nimport NavBar from \"../components/NavBar/NavBar\";\nimport {HashRouter} from \"react-router-dom\";\nimport Routes from \"./routes/Routes\";\nimport {Provider} from \"react-redux\";\nimport store from \"../BLL/redux-store\";\n\nclass App extends React.Component {\n\n    state = {\n        showNavBar: true\n    }\n    menuClickHandle = () => {\n        this.setState({showNavBar: !this.state.showNavBar})\n    }\n\n    render() {\n        return (\n            <HashRouter>\n                <Provider store={store}>\n                <div className={styles.App}>\n                    <NavBar\n                        menuClickHandle={this.menuClickHandle}\n                        showNavBar={this.state.showNavBar}\n                    />\n                    <Routes/>\n                </div>\n                </Provider>\n            </HashRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}