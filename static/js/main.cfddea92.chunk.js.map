{"version":3,"sources":["components/NavBar/NavBar.module.scss","components/4_Forgot/ui/Forgot.module.scss","components/common/button/Button.module.scss","components/common/loader/preloader.gif","components/2_Login/Login.module.scss","components/3_Registration/1_ui/Registration.module.scss","components/1_Profile/Profile.module.scss","main/App.module.css","components/common/input/Input.module.scss","components/NavBar/NavBar.tsx","API/api.tsx","BLL/login-reducer.ts","components/common/input/Input.tsx","components/common/button/Button.tsx","components/2_Login/Login.tsx","components/3_Registration/3_dal/RegistrationApi.ts","components/3_Registration/2_bll/registerReducer.ts","components/3_Registration/1_ui/Registration.tsx","components/4_Forgot/dal/ForgotAPI.ts","components/4_Forgot/bll/forgot-reducer.ts","components/4_Forgot/ui/Forgot.tsx","components/1_Profile/Profile.tsx","main/routes/Routes.tsx","BLL/redux-store.ts","main/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NavBar","props","className","styles","navBar","navBar__upperBlock","onClick","menuClickHandle","showNavBar","to","link","navBarExtension","navBarExtensionHide","navBarExtension__upperBlock","instance","axios","create","baseURL","AuthorizationAPI","email","password","rememberMe","post","token","document","cookie","initialState","success","error","isThereToken","isLoading","showError","loginReducer","state","action","type","setSuccessAC","setTokenAC","loadingLoginInProcessAC","showErrorAC","authThunk","dispatch","a","response","data","Input","placeholder","input","onChange","value","Button","button","color","red","blue","disabled","description","Login","useState","setEmail","setPassword","setRememberMe","useSelector","store","login","setEmailCallback","useCallback","e","target","setPasswordCallback","setRememberMeCallback","useDispatch","loginCallback","then","catch","err","setTimeout","LoginThunk","useEffect","wrapper","src","loader","alt","message","RegisterAPI","loading","SET_SUCCESS","SET_ERROR","SET_LOADING","setErrorAC","Registration","confirmPassword","setConfirmPassword","invalidField","setConfirmPasswordCallback","registerCallback","confirmedPassword","length","match","registerThunk","register","forgotAPI","emailSent","showMessage","showMessageToggle","toggle","loadingInProcess","loadingToggle","forgotPassTH","console","log","Forgot","disabledButton","disabledButtonToggle","forgot","handleClickSendButton","singIn","Profile","introduction","pages","id","title","path","component","exact","Routes","map","p","key","render","reducers","combineReducers","createStore","applyMiddleware","thunkMiddleware","App","setState","this","React","Component","Boolean","window","location","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cfddea92.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"NavBar_navLink__3jCbp\",\"navBar\":\"NavBar_navBar__169o_\",\"navBar__upperBlock\":\"NavBar_navBar__upperBlock__qc2oW\",\"link\":\"NavBar_link__3U1xr\",\"navBarExtension\":\"NavBar_navBarExtension__YcT2y\",\"navBarExtensionHide\":\"NavBar_navBarExtensionHide__2vlmv\",\"navBarExtension__upperBlock\":\"NavBar_navBarExtension__upperBlock__3s2dJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Forgot_wrapper__p4CpK\",\"singIn\":\"Forgot_singIn__2QqXC\",\"input\":\"Forgot_input__1kc8l\",\"message\":\"Forgot_message__SKEZ1\",\"loader\":\"Forgot_loader__2eWnp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__aD3e1\",\"red\":\"Button_red__23PuC\",\"blue\":\"Button_blue__26HuO\",\"disabled\":\"Button_disabled__31_Cw\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.d01db4ec.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__2teXa\",\"loader\":\"Login_loader__Gy6hG\",\"message\":\"Login_message___QPJw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Registration_wrapper__FBY9v\",\"message\":\"Registration_message__2t-4U\",\"loader\":\"Registration_loader__224UO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__34_Q4\",\"introduction\":\"Profile_introduction__3znfv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16cJx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2FfA1\"};","import React from 'react';\nimport styles from './NavBar.module.scss';\nimport {NavLink} from \"react-router-dom\";\n\nfunction NavBar(props: any) {\n    return (\n        <>\n            <div className={styles.navBar}>\n                <div className={styles.navBar__upperBlock}>\n                    <i className=\"material-icons\" onClick={() => {\n                        props.menuClickHandle()\n                    }}>{props.showNavBar ? \"keyboard_arrow_right\" : \"keyboard_arrow_left\"}</i>\n\n                    <NavLink to=\"/\" className={styles.link}>P</NavLink>\n                    <NavLink to=\"/login\" className={styles.link}>L</NavLink>\n                    <NavLink to=\"/registration\" className={styles.link}>R</NavLink>\n                    <NavLink to=\"/forgot\" className={styles.link}>F</NavLink>\n\n                </div>\n            </div>\n            <div className={`${styles.navBarExtension} ${props.showNavBar && styles.navBarExtensionHide}`}>\n                <div className={styles.navBarExtension__upperBlock}>\n                    <div>Menu</div>\n                    <div>Profile</div>\n                    <div>Login</div>\n                    <div>Registration</div>\n                    <div>Forgot password</div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default NavBar;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://cards-nya-back.herokuapp.com/1.0/'\n});\n\n\nexport const AuthorizationAPI = {\n    login(email: string | null, password: string | null, rememberMe: boolean | null) {\n        return instance.post(`auth/login`, {email, password, rememberMe})\n    },\n    authMe(){\n        return axios.post('https://cards-nya-back.herokuapp.com/1.0/auth/me',{\n            token: document.cookie})\n    }\n};","import {AuthorizationAPI} from \"../API/api\";\n\nexport type initialStateType = {\n    success: boolean,\n    error: string,\n    isThereToken: boolean,\n    isLoading: boolean,\n    showError: boolean\n}\n\nconst initialState: initialStateType = {\n    success: false,\n    error: '',\n    isThereToken: false,\n    isLoading: false,\n    showError: false\n};\n\nconst SET_SUCCESS = 'SET_SUCCESS';\nconst SET_ERROR = 'SET_ERROR';\nconst SET_TOKEN = 'SET_TOKEN';\nconst LOADING_LOGIN = 'LOADING_LOGIN';\nconst SHOW_ERROR = 'SHOW_ERROR';\n\nexport const loginReducer = (state = initialState, action: any): initialStateType => {\n    switch (action.type) {\n        case SET_SUCCESS:\n            return {\n                ...state,\n                success: action.success,\n                error: '',\n                isLoading: false\n            };\n        case SET_ERROR:\n            return {\n                ...state,\n                success: false,\n                error: action.error\n            };\n        case SET_TOKEN:\n            return {\n                ...state,\n                isThereToken: action.isThereToken\n            };\n        case LOADING_LOGIN:\n            return {\n                ...state,\n                isLoading: action.isLoading\n            };\n        case SHOW_ERROR:\n            return {\n                ...state,\n                showError: action.showError\n            };\n        default:\n            return state\n    }\n};\n\ntype setSuccessAction = {\n    type: typeof SET_SUCCESS,\n    success: boolean\n};\n\ntype setErrorAction = {\n    type: typeof SET_ERROR,\n    error: string\n}\n\nexport const setSuccessAC = (success: boolean): setSuccessAction => ({\n    type: SET_SUCCESS,\n    success\n});\n\nconst setErrorAC = (error: string): setErrorAction => ({\n    type: SET_ERROR,\n    error\n});\n\nexport const setTokenAC = (isThereToken: boolean) => ({\n    type: SET_TOKEN,\n    isThereToken\n});\nexport const loadingLoginInProcessAC = (isLoading: boolean) => ({\n    type: LOADING_LOGIN,\n    isLoading\n});\nexport const showErrorAC = (showError: boolean) => ({\n    type: SHOW_ERROR,\n    showError\n});\n\n\nexport const LoginThunk = (email: string | null, password: string | null, rememberMe: boolean | null) =>\n    (dispatch: any) => {\n        dispatch(loadingLoginInProcessAC(true))\n        AuthorizationAPI.login(email, password, rememberMe)\n            .then((response) => {\n                document.cookie = `${response.data.token}; max-age=3600`;\n                dispatch(setSuccessAC(true));\n                dispatch(loadingLoginInProcessAC(false))\n            })\n            .catch((e) => {\n                const err = e.response.data.error;\n                dispatch(setErrorAC(err))\n                dispatch(loadingLoginInProcessAC(false))\n                dispatch(showErrorAC(true))\n                setTimeout(() => {\n                    dispatch(showErrorAC(false))\n                }, 3000)\n            })\n\n    };\n\nexport const authThunk = () => async (dispatch: any) => {\n    try {\n        const response = await AuthorizationAPI.authMe();\n        dispatch(setTokenAC(true));\n        document.cookie = `${response.data.token}; max-age=3600`\n    } catch (e) {\n        dispatch(setTokenAC(false));\n    }\n};\n\n\nexport default loginReducer;","import React from 'react';\nimport styles from './Input.module.scss'\n\n\nfunction Input(props: any) {\n\n    return (\n        <>\n            <input type={props.type ? props.type : \"text\"} placeholder={props.placeholder} className={styles.input} onClick={props.onClick}\n                   onChange={props.onChange} value={props.value}/>\n        </>\n    );\n}\n\nexport default Input;","import React from 'react';\nimport styles from './Button.module.scss'\n\n\nfunction Button(props: any) {\n\n    return (\n        <>\n            <button\n                className={`${styles.button}\n                ${props.color === 'red' ? styles.red : styles.blue}\n                ${props.disabled && styles.disabled}`}\n                onClick={props.onClick}\n                onChange={props.onChange}\n                value={props.value}\n                disabled={props.disabled}\n            >\n                {props.description}\n            </button>\n        </>\n    );\n}\n\nexport default Button;","import React, {ChangeEvent, useCallback, useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {authThunk, LoginThunk} from '../../BLL/login-reducer';\nimport styles from './Login.module.scss'\nimport Input from \"../common/input/Input\";\nimport Button from \"../common/button/Button\";\nimport {storeType} from \"../../BLL/redux-store\";\nimport {Redirect} from \"react-router-dom\";\nimport loader from \"../common/loader/preloader.gif\";\n\n\nconst Login = () => {\n\n    let [email, setEmail] = useState<string>('');\n    let [password, setPassword] = useState<string>('');\n    let [rememberMe, setRememberMe] = useState<boolean>(false);\n    const {isLoading} = useSelector((store: any) => store.login);\n    const {showError} = useSelector((store: any) => store.login);\n\n    const setEmailCallback = useCallback(\n        (e: ChangeEvent<HTMLInputElement>) => setEmail(e.target.value),\n        [setEmail]\n    );\n\n    const setPasswordCallback = useCallback(\n        (e: ChangeEvent<HTMLInputElement>) => setPassword(e.target.value),\n        [setPassword]\n    );\n\n    const setRememberMeCallback = useCallback(\n        () => setRememberMe(true),\n        [setRememberMe]\n    );\n\n    let dispatch = useDispatch();\n    const loginCallback = useCallback(() => {\n            dispatch(LoginThunk(email, password, rememberMe))\n        },\n        [email, password, rememberMe, dispatch]\n    );\n\n    const {success, error, isThereToken} = useSelector((store: storeType) => store.login);\n\n    useEffect(() => {\n        if (!isThereToken && document.cookie) {\n            dispatch(authThunk());\n        }\n    }, [dispatch, isThereToken]);\n\n\n    if ((success && error === '') || (isThereToken && document.cookie)) {\n        return <Redirect to='/'/>;\n    }\n\n\n    return (\n        <div className={styles.wrapper}>\n            <Input placeholder={'Email'} value={email} onChange={setEmailCallback} type={\"email\"}/>\n            <Input placeholder={'password'} type={\"password\"} value={password} onChange={setPasswordCallback}/>\n            <Input type={\"checkbox\"} onChange={setRememberMeCallback}/>\n            <Button description={'Login'} onClick={loginCallback} disabled={isLoading}/>\n            {isLoading && <div><img src={loader} className={styles.loader} alt=\"loading\"/></div>}\n            {showError && <div className={styles.message}>{error}</div>}\n        </div>\n    );\n};\n\nexport default Login;","import axios from \"axios\";\n\ntype responseType = {\n    addedUser: {email: string, isAdmin: boolean, __v: number, _id: string}\n    success: boolean\n};\n\nexport const RegisterAPI = {\n    register: (email: string, password: string) => {\n        return axios.post<responseType>\n        ('https://cards-nya-back.herokuapp.com/1.0/auth/register',{email, password});\n    }\n};\n\n","import {RegisterAPI} from \"../3_dal/RegistrationApi\";\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\nimport {storeType} from \"../../../BLL/redux-store\";\n\nexport type initialStateType = {\n    loading: boolean,\n    success: boolean,\n    error: string,\n}\n\nconst initialState: initialStateType = {\n    loading: false,\n    success: false,\n    error: ''\n};\n\nexport const registerReducer = (state = initialState, action: actionTypes): initialStateType => {\n    switch (action.type) {\n        case SET_LOADING:\n            return {\n                ...state,\n                loading: action.loading,\n            };\n\n        case SET_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: action.success,\n                error: ''\n            };\n\n        case SET_ERROR:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.error\n            };\n\n        default:\n            return state\n    }\n};\n\nconst SET_SUCCESS = 'SET_SUCCESS';\nconst SET_ERROR = 'SET_ERROR';\nconst SET_LOADING = 'SET_LOADING';\n\ntype actionTypes = setSuccessAction | setErrorAction | setLoadingAction;\n\ntype setSuccessAction = {\n    type: typeof SET_SUCCESS,\n    success: boolean\n};\n\ntype setErrorAction = {\n    type: typeof SET_ERROR,\n    error: string\n};\n\ntype setLoadingAction = {\n    type: typeof SET_LOADING,\n    loading: boolean\n};\n\nconst setSuccessAC = (success: boolean): setSuccessAction => ({\n    type: SET_SUCCESS,\n    success\n});\n\nconst setErrorAC = (error: string): setErrorAction => ({\n    type: SET_ERROR,\n    error\n});\n\nconst setLoadingAC = (loading: boolean): setLoadingAction => ({\n    type: SET_LOADING,\n    loading\n});\n\nexport const registerThunk = (email: string, password: string, confirmedPassword: string)\n    : ThunkAction<Promise<void>, storeType, unknown, actionTypes> => {\n    return async (dispatch: ThunkDispatch<storeType, unknown, actionTypes>) => {\n        dispatch(setLoadingAC(true));\n        if (password !== confirmedPassword)\n            dispatch(setErrorAC('Password is not match'));\n        else if(email === '' || password === '' || confirmedPassword === '')\n            dispatch(setErrorAC('All field is required!'));\n        else if(password.length<=7 || confirmedPassword.length<=7)\n            dispatch(setErrorAC('password must be more than 7 char!'));\n        else if(!email.match(/^[\\w][\\w-.]*@[\\w-]+\\.[a-z]{2,7}$/i))\n            dispatch(setErrorAC('Email is not valid!'));\n        else {\n            try {\n                await RegisterAPI.register(email, password);\n                dispatch(setSuccessAC(true));\n            } catch (e) {\n                debugger\n                const err = e.response.data.error;\n                dispatch(setErrorAC(err))\n            }\n        }\n    }\n};\n\n\n","import React, {ChangeEvent, useCallback, useState} from 'react';\nimport styles from './Registration.module.scss';\nimport Input from \"../../common/input/Input\";\nimport Button from \"../../common/button/Button\";\nimport {registerThunk} from \"../2_bll/registerReducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {storeType} from \"../../../BLL/redux-store\";\nimport {Redirect} from \"react-router-dom\";\n\n\nfunction Registration () {\n\n    let [email, setEmail] = useState<string>('');\n    let [password, setPassword] = useState<string>('');\n    let [confirmPassword, setConfirmPassword] = useState<string>('');\n    let validateMessage = '';\n    let [invalidField] = useState<boolean>(false);\n\n    const setEmailCallback = useCallback(\n        (e: ChangeEvent<HTMLInputElement>)=>setEmail(e.target.value),\n        [setEmail]\n    );\n\n    const setPasswordCallback = useCallback(\n        (e: ChangeEvent<HTMLInputElement>)=>setPassword(e.target.value),\n        [setPassword]\n    );\n\n    const setConfirmPasswordCallback = useCallback(\n        (e: ChangeEvent<HTMLInputElement>)=>setConfirmPassword(e.target.value),\n        [setConfirmPassword]\n    );\n\n\n    const dispatch = useDispatch();\n    const registerCallback = useCallback(()=>{\n        if (validateMessage === '') {\n            dispatch(registerThunk(email, password, confirmPassword))\n        }},\n        [email, password, confirmPassword, validateMessage, dispatch]\n    );\n\n    const {success, error, loading} = useSelector((store: storeType) => store.register);\n\n    if(success && error === '')\n        return <Redirect to='/login'/>;\n\n\n    return (\n        <div className={styles.wrapper}>\n            <Input type='email' placeholder={'Email'} value={email} onChange={setEmailCallback}/>\n            <Input type='password' placeholder={'password'} value={password} onChange={setPasswordCallback}/>\n            <Input type='password' placeholder={'confirm password'} value={confirmPassword}\n                   onChange={setConfirmPasswordCallback}/>\n            <Button description={'Register'} onClick={registerCallback}/>\n            {invalidField && <div className={styles.message}>{validateMessage}</div>}\n            {error && <div className={styles.message}>{error}</div>}\n            {loading && <div>Loading</div>}\n        </div>\n    );\n}\n\n\nexport default Registration;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://cards-nya-back.herokuapp.com/1.0/'\n});\n\nexport const forgotAPI = {\n  forgotPass: (email: string) => {\n    return instance.post\n      ('auth/forgot',\n        {\n          email: email\n        });\n  }\n};","import {forgotAPI} from \"../dal/ForgotAPI\";\n\nexport type initialStateType = typeof initialState\n\nconst initialState = {\n    email: '',\n    emailSent: null,\n    isLoading: false,\n    showMessage: false,\n    message: ''\n}\n\nexport const emailSendSuccess = (ans: any) => {\n    return {type: \"EMAIL_SENT\", emailSent: true}\n}\n\nexport const sendEmailWithError = () => {\n    console.log('все плохо')\n    return {type: \"EMAIL_SENT\", emailSent: false}\n}\n\nexport const showMessageToggle = (toggle: boolean, message: string) => {\n    return {type: \"TOGGLE_MESSAGE\", toggle, message}\n}\n\nexport const loadingInProcess = (loadingToggle: boolean) => {\n    return {type: \"LOADING_IN_PROCESS\", loadingToggle}\n}\n\nexport const forgotReducer = (state = initialState, action: any): initialStateType => {\n    switch (action.type) {\n        case \"SET_EMAIL\":\n            return {\n                ...state,\n                email: action.email\n            };\n        case \"EMAIL_SENT\":\n            return {\n                ...state,\n                emailSent: action.emailSent,\n                showMessage: true\n            };\n        case \"TOGGLE_MESSAGE\":\n            return {\n                ...state,\n                showMessage: action.toggle,\n                message: action.message\n            };\n        case \"LOADING_IN_PROCESS\":\n            return {\n                ...state,\n                isLoading: action.loadingToggle\n            };\n        default:\n            return state\n    }\n}\n\nexport const forgotPassTH = (email: string) => {\n    return async (dispatch: any) => {\n        dispatch(loadingInProcess(true))\n        try {\n            const ans = await forgotAPI.forgotPass(email)\n            dispatch(emailSendSuccess(ans))\n        } catch (e) {\n            dispatch(sendEmailWithError())\n        } finally {\n            dispatch(loadingInProcess(false))\n        }\n\n    }\n};","import React, {useEffect, useState} from 'react';\nimport styles from './Forgot.module.scss';\nimport Input from \"../../common/input/Input\";\nimport Button from \"../../common/button/Button\";\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {forgotPassTH, showMessageToggle} from \"../bll/forgot-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport loader from \"./../../common/loader/preloader.gif\"\n\n\nfunction Forgot() {\n\n    const dispatch = useDispatch();\n\n    const [email, setEmail] = useState<string>('');\n    const [disabledButton, disabledButtonToggle] = useState<boolean>(false);\n    const {emailSent} = useSelector((store: any) => store.forgot);\n    const {isLoading} = useSelector((store: any) => store.forgot);\n    const {showMessage} = useSelector((store: any) => store.forgot);\n    const {message} = useSelector((store: any) => store.forgot);\n\n    const handleClickSendButton = async () => {\n        disabledButtonToggle(true)\n        await dispatch(forgotPassTH(email));\n    };\n\n    const redirect = () => {\n        return <Redirect to={\"/login\"}/>\n    };\n\n    useEffect(() => {\n        if (emailSent === true) {\n            disabledButtonToggle(false)\n            dispatch(showMessageToggle(true, \"Password recovery link sent to email\"))\n            setTimeout(() => {\n                dispatch(showMessageToggle(false, ''))\n            }, 3000)\n            redirect()\n        } else if (emailSent === false) {\n            disabledButtonToggle(false)\n            dispatch(showMessageToggle(true, \"Error\"))\n            setTimeout(() => {\n                dispatch(showMessageToggle(false, ''))\n            }, 3000)\n            console.log(\"не отправило\")\n        }\n    }, [emailSent, dispatch]);\n\n    return (\n        <div className={styles.wrapper}>\n            <div className={styles.input}>\n                <Input placeholder={'Your email'}\n                       value={email} onChange={(e: any) => {\n                    setEmail(e.target.value)\n                }}/>\n                <Button description={\"Send\"} onClick={handleClickSendButton} disabled={disabledButton}/>\n            </div>\n            <div>\n                <NavLink to=\"/login\" className={styles.singIn}>Sing In</NavLink>\n            </div>\n            {showMessage && <div className={styles.message}>{message}</div>}\n            {isLoading && <div><img src={loader} className={styles.loader} alt=\"loading\"/></div>}\n        </div>\n    );\n}\n\nexport default Forgot;","import React, {useEffect} from 'react';\nimport styles from './Profile.module.scss';\nimport Button from \"../common/button/Button\";\nimport Input from \"../common/input/Input\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {storeType} from \"../../BLL/redux-store\";\nimport {authThunk, setTokenAC, setSuccessAC} from \"../../BLL/login-reducer\";\nimport {Redirect} from \"react-router-dom\";\n\n\nfunction Profile() {\n\n    const {isThereToken, success} = useSelector((store: storeType) => store.login);\n\n    let dispatch = useDispatch();\n    useEffect(() => {\n        if(document.cookie && !isThereToken)\n            dispatch(authThunk());\n    }, [dispatch, isThereToken]);\n\n    const deleteToken = () => {\n        document.cookie = `${document.cookie}; max-age=-1`;\n        dispatch(setTokenAC(false));\n        dispatch(setSuccessAC(false))\n    };\n\n    if(!isThereToken && !document.cookie && !success)\n        return <Redirect to='/login'/>;\n\n    return (\n        <div className={styles.wrapper}>\n            Profile\n            <div className={styles.introduction}>\n                <Input/>\n                <div>\n                    <Button description={'Blue'} color={'blue'}/>\n                    <Button description={'Log Out'} color={'red'} onClick={deleteToken}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;","import React from 'react';\nimport {Switch, Route} from \"react-router-dom\";\nimport Login from \"../../components/2_Login/Login\";\nimport Registration from \"../../components/3_Registration/1_ui/Registration\";\nimport Forgot from \"../../components/4_Forgot/ui/Forgot\";\nimport Profile from \"../../components/1_Profile/Profile\";\n\n\ntype PageType = {\n    id: number;\n    title: string;\n    path?: string;\n    exact?: boolean;\n    component: any;\n};\n\nconst pages: Array<PageType> = [\n    {id: 0, title: 'login', path: '/login', component: () => <Login/>},\n    {id: 1, title: 'register', path: '/registration',  component: () => <Registration/>},\n    {id: 2, title: 'forgot', path: '/forgot', component: () => <Forgot/>},\n    {id: 3, title: 'profile', path: '/',  exact: true, component: () => <Profile/>},\n];\n\n\nconst Routes = () => {\n    return (\n        <Switch>\n            {pages.map(p => (\n                <Route\n                    key={p.id}\n                    path={p.path}\n                    exact={p.exact}\n                    render={p.component}\n                />\n            ))}\n        </Switch>\n    )\n};\n\nexport default Routes;\n","import {createStore, combineReducers, applyMiddleware} from \"redux\";\nimport thunkMiddleware from \"redux-thunk\"\nimport {loginReducer} from \"./login-reducer\";\nimport {forgotReducer} from \"../components/4_Forgot/bll/forgot-reducer\";\nimport { registerReducer } from \"../components/3_Registration/2_bll/registerReducer\";\n\n\n\nlet reducers = combineReducers({\n    login: loginReducer,\n    register: registerReducer,\n    forgot: forgotReducer\n});\n\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\nexport default store;\n\n\nexport type storeType = ReturnType<typeof reducers>\n\n","import React from 'react';\nimport styles from './App.module.css';\nimport NavBar from \"../components/NavBar/NavBar\";\nimport {HashRouter} from \"react-router-dom\";\nimport Routes from \"./routes/Routes\";\nimport {Provider} from \"react-redux\";\nimport store from \"../BLL/redux-store\";\n\nclass App extends React.Component {\n\n    state = {\n        showNavBar: true\n    }\n    menuClickHandle = () => {\n        this.setState({showNavBar: !this.state.showNavBar})\n    }\n\n    render() {\n        return (\n            <HashRouter>\n                <Provider store={store}>\n                <div className={styles.App}>\n                    <NavBar\n                        menuClickHandle={this.menuClickHandle}\n                        showNavBar={this.state.showNavBar}\n                    />\n                    <Routes/>\n                </div>\n                </Provider>\n            </HashRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}